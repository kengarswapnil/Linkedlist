
class LinkedList{
    public static class Node{
        int data;
        Node next;
        
        Node(int data){
           this.data = data;
           this.next = null;
        }
    }
    
    public static Node head;
    public static Node tail;
    
    
    //addfirst
    public static void addfirst(int data)
    {
        Node newnode = new Node(data);
        if(head == null){
            head = tail = newnode;
            return;
        }
        newnode.next = head;
        head = newnode;
    }
    
    //Display
    
    public static void Display(){
        Node temp = head;
        while(temp != null){
            System.out.print(temp.data + "->");
            temp = temp.next;
        }
        System.out.print("null");
    }
    
    //Zigzag method
    public static void Zigzag(){
        //find mid 
        Node slow = head;
        Node fast = head;
        
        while(fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        Node mid = slow;
        
        //reverse 2nd half node
        
        Node curr = mid.next;
        mid.next = null;
        Node prev = null;
        Node next;
        
        while(curr != null){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        
        Node left = head;
        Node right = head;
        Node nextL , nextR;
        
        //merge all node
        
        while(left != null && right != null){
            nextL = left.next;
            left.next = right;
            nextR = right.next;
            right.next = nextL;
            
            left = nextL;
            right =  nextR;
        }
    }
    
    public static void main(String[] args) {
        LinkedList ll = new LinkedList();
        ll.addfirst(1);
        ll.addfirst(2);
        ll.addfirst(3);
        // ll.Display();
        ll.Zigzag();
        ll.Display();
    }
}
