
class Doublelinkedlist{
    public static class Node{
        int data;
        Node next;
        Node prev;
        
        Node(int data){
            this.data = data;
            this.next = null;
            this.prev = null;
        }
    }
    
    public static Node head;
    public static Node tail;
    public static int size;
    
    //addFirst
    public static void addFirst(int data){
        Node newnode = new Node(data);
        if(head == null){
            head=tail=newnode;
            return;
        }
        newnode.next =head;
        head.prev = newnode;
        head = newnode; 
    }
    
    //addlast
    public static void addlast(int data){
        Node newnode = new Node(data);
        if(head == null){
            head = tail = newnode;
        }
        tail.next = newnode;
        newnode.prev = tail;
        tail = newnode;
    }
    
    //removefirst
    public  int removeFirst(){
        if(head  == null){
            System.out.println("DLL is Empty");
            return Integer.MIN_VALUE;
        }
         int val = head.data;
        if(size == 1){
            head =tail =null;
        }else{
       
        head = head.next;
        head.prev = null;
        }
        size--;
        return val;
    }
    

    
    
    //Display
    public static void display(){
        Node temp = head;
        while(temp != null){
            System.out.print(temp.data+"<->");
            temp = temp.next;
        }
        System.out.print("null");
    }
    
    public static void main(String[] args) {
       Doublelinkedlist dl = new Doublelinkedlist();
      dl.addlast(1);
      dl.addlast(2);
      dl.addlast(4);
      dl.removelast();
      
    //   dl.addFirst(3);
    //   dl.addFirst(4);
       dl.display();
    }
}
